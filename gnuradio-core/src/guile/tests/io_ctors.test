;;; -*- Scheme -*-
;;;
;;; Copyright 2010 Free Software Foundation, Inc.
;;;
;;; This file is part of GNU Radio
;;;
;;; GNU Radio is free software; you can redistribute it and/or modify
;;; it under the terms of the GNU General Public License as published by
;;; the Free Software Foundation; either version 3, or (at your option)
;;; any later version.
;;;
;;; GNU Radio is distributed in the hope that it will be useful,
;;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;;; GNU General Public License for more details.
;;;
;;; You should have received a copy of the GNU General Public License
;;; along with this program.  If not, see <http://www.gnu.org/licenses/>.
;;;

;;; If you're using Emacs's Scheme mode:
;;;   (put 'with-test-prefix 'scheme-indent-function 1)

;;; See the comments in gnuradio/test-suite/lib.scm for info on writing tests.
;;; See also the very end of the file, where the test-equal, test-eqv
;;; and test-eq macros are defined.

(use-modules (gnuradio test-suite lib))
(use-modules (gnuradio core))
(use-modules (oop goops))

;;; Add test code for all constructors in these files
;;;

;;; ./io/gr_file_descriptor_sink.h
;;(pass-if (true? (gr:file-descriptor-sink 0 0))) FIXME: throws gr_io_signature(3)

;;; ./io/gr_file_descriptor_source.h
;; (pass-if (true? (gr:file-descriptor-source 1 1 false))) FIXME: not found

;;; ./io/gr_file_sink.h
(pass-if (true? (gr:file-sink 1 "foo")))

;;; ./io/gr_file_source.h
;; (pass-if (true? (gr:file-source 1 "foo" false))) FIXME: not found

;;; ./io/gr_histo_sink_f.h FIXME: needs gr_msg_queue_sptr
;; gr_make_histo_sink_f (gr_msg_queue_sptr msgq);
;; (pass-if (true? (gr:histo-sink-f )))

;;; ./io/gr_message_sink.h
;; (pass-if (true? (gr:message-sink )))

;;; ./io/gr_message_source.h
;; (pass-if (true? (gr:message-source )))

;;; ./io/gr_oscope_sink_f.h FIXME: needs gr_io_signature_sptr
;; _oscope_sink_x (const std::string name, gr_io_signature_sptr input_sig,
;;                     double sample_rate);
;; (pass-if (true? (gr:oscope-sink-f )))

;;; ./io/gr_oscope_sink_x.h

;; gr_oscope_sink_x (const std::string name,
;;                     gr_io_signature_sptr input_sig,
;;                     double sampling_rate);
;; (pass-if (true? (gr:oscope_sink_x )))

;;; ./io/gr_udp_sink.h

;;; ./io/gr_udp_source.h
;; (pass-if (true? (gr:message-source 0 "foo" 0 1472 true true))) FIXME: not found

;;; ./io/gr_wavfile_sink.h
;; (pass-if (true? (gr:message-source "foo" 1 1 1))) FIXME: not found

;;; ./io/gr_wavfile_source.h
;; (pass-if (true? (gr:message-source "foo" false))) FIXME: not found

