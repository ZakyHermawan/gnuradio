#!/usr/bin/env python
#
# Copyright 2004,2007,2010 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# 

from gnuradio import gr, gr_unittest
import math

class test_pll_carriertracking (gr_unittest.TestCase):

    def setUp (self):
        self.tb = gr.top_block()

    def tearDown (self):
        self.tb = None

    def test_pll_carriertracking (self):
        expected_result = ((1.00000238419+7.21919457547e-09j),
                           (0.998025715351+0.062790453434j),
                           (0.992878139019+0.119114711881j),
                           (0.985585451126+0.16916936636j),
                           (0.976963579655+0.21341380477j),
                           (0.967643141747+0.252319812775j),
                           (0.958120942116+0.286356031895j),
                           (0.948766887188+0.315971136093j),
                           (0.939851403236+0.341586351395j),
                           (0.931558966637+0.363589793444j),
                           (0.924019515514+0.382339715958j),
                           (0.917312920094+0.398162424564j),
                           (0.9114767313+0.411352336407j),
                           (0.906515955925+0.422172755003j),
                           (0.902329206467+0.431043088436j),
                           (0.8989828825+0.437978446484j),
                           (0.896438419819+0.443168222904j),
                           (0.894643902779+0.446782171726j),
                           (0.893543541431+0.448972672224j),
                           (0.893085837364+0.449881345034j),
                           (0.893211960793+0.449634194374j),
                           (0.893862366676+0.448344886303j),
                           (0.894974172115+0.446114838123j),
                           (0.89649784565+0.443042784929j),
                           (0.898379862309+0.439216792583j),
                           (0.900570392609+0.434715718031j),
                           (0.902926802635+0.429791986942j),
                           (0.905423760414+0.424503326416j),
                           (0.908115327358+0.418716549873j),
                           (0.910964310169+0.412489384413j),
                           (0.913929581642+0.405871063471j),
                           (0.916985273361+0.398915469646j),
                           (0.920104384422+0.391668856144j),
                           (0.923261523247+0.384174525738j),
                           (0.926428377628+0.376470327377j),
                           (0.929587602615+0.3685952425j),
                           (0.932724237442+0.360585510731j),
                           (0.935822367668+0.352472603321j),
                           (0.938865244389+0.344285786152j),
                           (0.941773712635+0.336241692305j),
                           (0.944620370865+0.328158795834j),
                           (0.94739818573+0.32005661726j),
                           (0.950098872185+0.311952739954j),
                           (0.952714562416+0.303861320019j),
                           (0.955247402191+0.295800030231j),
                           (0.957694888115+0.287783116102j),
                           (0.960053324699+0.279822826385j),
                           (0.962315440178+0.271930038929j),
                           (0.96448802948+0.264117747545j),
                           (0.966570436954+0.256397068501j),
                           (0.968563258648+0.248777091503j),
                           (0.970409572124+0.241460204124j),
                           (0.972127914429+0.234440952539j),
                           (0.97377294302+0.227515518665j),
                           (0.975345790386+0.220690101385j),
                           (0.976839780807+0.213968709111j),
                           (0.978262722492+0.207358703017j),
                           (0.979616940022+0.200864806771j),
                           (0.980905056+0.194491744041j),
                           (0.982122182846+0.188243359327j),
                           (0.983273088932+0.18212479353j),
                           (0.984363257885+0.176140069962j),
                           (0.985394001007+0.170292437077j),
                           (0.986363172531+0.16458517313j),
                           (0.98724168539+0.159217983484j),
                           (0.988072276115+0.153976023197j),
                           (0.988858819008+0.148855358362j),
                           (0.989599764347+0.143855035305j),
                           (0.990294575691+0.138971716166j),
                           (0.990951240063+0.134203910828j),
                           (0.991572141647+0.129550367594j),
                           (0.992157161236+0.125009477139j),
                           (0.992702245712+0.120578929782j),
                           (0.993216574192+0.116259463131j),
                           (0.993701457977+0.112050771713j),
                           (0.994158565998+0.107951454818j),
                           (0.994559407234+0.104160495102j),
                           (0.9949182868+0.100662395358j),
                           (0.995259582996+0.0972395762801j),
                           (0.995584189892+0.0938917249441j),
                           (0.995885193348+0.0906178206205j),
                           (0.99616932869+0.0874189138412j),
                           (0.996438741684+0.0842954516411j),
                           (0.996694862843+0.0812477469444j),
                           (0.996931552887+0.0782764554024j),
                           (0.997152447701+0.0753828883171j),
                           (0.997361660004+0.0725681483746j),
                           (0.997559130192+0.0698337852955j),
                           (0.997741162777+0.067180365324j),
                           (0.99789583683+0.0648084580898j),
                           (0.998042702675+0.0624987781048j),
                           (0.998183488846+0.0602464973927j),
                           (0.998314678669+0.0580499768257j),
                           (0.998434245586+0.0559054017067j),
                           (0.998548746109+0.053810685873j),
                           (0.998658537865+0.0517641305923j),
                           (0.998762428761+0.0497645735741j),
                           (0.998855054379+0.0478102117777j),
                           (0.998943626881+0.0459015443921j),
                           (0.999028742313+0.0440383702517j))

        sampling_freq = 10e3
        freq = sampling_freq / 100

        alpha = 0.1
        beta = alpha * alpha / 4.0
        maxf = 1
        minf = -1

        src = gr.sig_source_c (sampling_freq, gr.GR_COS_WAVE, freq, 1.0)
        pll = gr.pll_carriertracking_cc(alpha, beta, maxf, minf)
        head = gr.head (gr.sizeof_gr_complex, int (freq))
        dst = gr.vector_sink_c ()

        self.tb.connect (src, pll, head)
        self.tb.connect (head, dst)

        self.tb.run ()
        dst_data = dst.data ()
        self.assertComplexTuplesAlmostEqual (expected_result, dst_data, 5)

if __name__ == '__main__':
    gr_unittest.run(test_pll_carriertracking, "test_pll_carriertracking.xml")
