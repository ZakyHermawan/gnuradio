#!/usr/bin/env python
#
# Copyright 2004,2007,2010,2011 Free Software Foundation, Inc.
# 
# This file is part of GNU Radio
# 
# GNU Radio is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3, or (at your option)
# any later version.
# 
# GNU Radio is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GNU Radio; see the file COPYING.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street,
# Boston, MA 02110-1301, USA.
# 

from gnuradio import gr, gr_unittest
import math

class test_pll_carriertracking (gr_unittest.TestCase):

    def setUp (self):
        self.tb = gr.top_block()

    def tearDown (self):
        self.tb = None

    def test_pll_carriertracking (self):
        expected_result = ((1.00000238419+6.57831922268e-09j),
                           (0.998351693153+0.0573740489781j),
                           (0.994012773037+0.109242096543j),
                           (0.987789511681+0.155784770846j),
                           (0.980356454849+0.197242289782j),
                           (0.972262203693+0.233890414238j),
                           (0.963963091373+0.266027569771j),
                           (0.955816328526+0.293958544731j),
                           (0.948096513748+0.31798568368j),
                           (0.941002130508+0.338400006294j),
                           (0.934680581093+0.355482578278j),
                           (0.929229319096+0.369498342276j),
                           (0.924701035023+0.380694836378j),
                           (0.921043872833+0.389459967613j),
                           (0.918319702148+0.395834594965j),
                           (0.91650646925+0.400014132261j),
                           (0.915561556816+0.40217769146j),
                           (0.915425121784+0.402490824461j),
                           (0.916029334068+0.401106894016j),
                           (0.917308092117+0.39817237854j),
                           (0.919185698032+0.393822491169j),
                           (0.921583771706+0.388183712959j),
                           (0.924419641495+0.381372988224j),
                           (0.927624821663+0.373506993055j),
                           (0.93112629652+0.364693939686j),
                           (0.934793651104+0.355197936296j),
                           (0.938562095165+0.345107495785j),
                           (0.942447602749+0.33434677124j),
                           (0.946396291256+0.323003143072j),
                           (0.950359642506+0.311159342527j),
                           (0.954286515713+0.298890888691j),
                           (0.958144724369+0.286276459694j),
                           (0.961902141571+0.273387700319j),
                           (0.96553081274+0.260292351246j),
                           (0.969001471996+0.247053653002j),
                           (0.972298383713+0.233733415604j),
                           (0.975410103798+0.220389455557j),
                           (0.978325486183+0.207074314356j),
                           (0.981000483036+0.194007188082j),
                           (0.983471632004+0.181051760912j),
                           (0.985742926598+0.168245732784j),
                           (0.987816333771+0.155622571707j),
                           (0.989693164825+0.143212914467j),
                           (0.991374969482+0.131043404341j),
                           (0.992875099182+0.119139909744j),
                           (0.994201719761+0.107524067163j),
                           (0.995362222195+0.0962148010731j),
                           (0.996359944344+0.0852287560701j),
                           (0.997212648392+0.0745811164379j),
                           (0.997930467129+0.0642844736576j),
                           (0.998514950275+0.0545224510133j),
                           (0.998972594738+0.0452938191593j),
                           (0.999334216118+0.0364210158587j),
                           (0.99960911274+0.0279066264629j),
                           (0.999806642532+0.0197515785694j),
                           (0.99992787838+0.0119558870792j),
                           (0.999987542629+0.00451827049255j),
                           (0.999994814396-0.00256353616714j),
                           (0.999957740307-0.00929233431816j),
                           (0.999877095222-0.0156717002392j),
                           (0.999762177467-0.0217055380344j),
                           (0.999622702599-0.0273993015289j),
                           (0.999463677406-0.0327589809895j),
                           (0.999292552471-0.0376165211201j),
                           (0.999108791351-0.0421659946442j),
                           (0.998919844627-0.0464186370373j),
                           (0.998729586601-0.0503882467747j),
                           (0.998537421227-0.0540841519833j),
                           (0.998342692852-0.0575186908245j),
                           (0.9981533885-0.0607041418552j),
                           (0.997971534729-0.063651651144j),
                           (0.997796595097-0.0663715749979j),
                           (0.997623920441-0.0688742175698j),
                           (0.997461974621-0.0711689144373j),
                           (0.997311413288-0.0732654929161j),
                           (0.997185945511-0.0749996080995j),
                           (0.997077047825-0.0763883292675j),
                           (0.996980309486-0.0776248201728j),
                           (0.996895432472-0.0787187665701j),
                           (0.996822297573-0.0796797126532j),
                           (0.996752738953-0.0805156230927j),
                           (0.996692657471-0.0812350511551j),
                           (0.996642947197-0.0818456709385j),
                           (0.996603965759-0.0823540389538j),
                           (0.996568918228-0.0827651321888j),
                           (0.996540248394-0.0830852389336j),
                           (0.996520996094-0.0833202600479j),
                           (0.996510386467-0.0834743082523j),
                           (0.996518313885-0.0833787024021j),
                           (0.996529102325-0.083223849535j),
                           (0.996545791626-0.0830176770687j),
                           (0.99656867981-0.0827698707581j),
                           (0.996593296528-0.0824855566025j),
                           (0.99661642313-0.0821713805199j),
                           (0.996643543243-0.081834435463j),
                           (0.996674180031-0.0814796686172j),
                           (0.996706545353-0.0811114609241j),
                           (0.996734440327-0.0807323306799j),
                           (0.996764600277-0.0803465023637j),
                           (0.996797323227-0.0799564495683j))

        sampling_freq = 10e3
        freq = sampling_freq / 100

        loop_bw = math.pi/100.0
        maxf = 1
        minf = -1

        src = gr.sig_source_c (sampling_freq, gr.GR_COS_WAVE, freq, 1.0)
        pll = gr.pll_carriertracking_cc(loop_bw, maxf, minf)
        head = gr.head (gr.sizeof_gr_complex, int (freq))
        dst = gr.vector_sink_c ()

        self.tb.connect (src, pll, head)
        self.tb.connect (head, dst)

        self.tb.run ()
        dst_data = dst.data ()

        self.assertComplexTuplesAlmostEqual (expected_result, dst_data, 5)

if __name__ == '__main__':
    gr_unittest.run(test_pll_carriertracking, "test_pll_carriertracking.xml")
