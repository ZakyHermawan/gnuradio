from xml.dom import minidom
from emit_omnilog import *
import string

def make_registry(dom, funclist, fcountlist) :
    tempstring = "";
    tempstring = tempstring + "/*this file is auto_generated by volk_register.py*/\n\n";
    tempstring = tempstring +'\n#ifndef INCLUDED_VOLK_REGISTRY_H';
    tempstring = tempstring +'\n#define INCLUDED_VOLK_REGISTRY_H\n\n';
    tempstring = tempstring +'#include<volk/volk_config.h>\n';
    tempstring = tempstring +'#include<volk/volk_config_fixed.h>\n';
    tempstring = tempstring + emit_prolog();
    tempstring = tempstring + '\n'

    

    
    for domarch in dom:
        arch = str(domarch.attributes["name"].value);
        tempstring = tempstring +"#if LV_HAVE_" + arch.swapcase() + "\n";
        tempstring = tempstring +"#define LV_" + arch.swapcase() + "_CNT 1\n";
        tempstring = tempstring +"#else\n";
        tempstring = tempstring +"#define LV_" + arch.swapcase() + "_CNT 0\n";
        tempstring = tempstring +"#endif /*LV_HAVE_" + arch.swapcase() + "*/\n\n";

    counter = 0;
    for fcount in fcountlist:
        tempstring = tempstring + "static const int " + funclist[counter] + "_arch_defs[] = {\n";
        counter = counter + 1;
        for arch_list in fcount:
            tempstring = tempstring + " (LV_"
            for ind in range(len(arch_list)): 
                tempstring = tempstring + arch_list[ind] + "_CNT";
                if ind < len(arch_list) - 1:
                    tempstring = tempstring + " * LV_";
            tempstring = tempstring + ") + ";
        lindex = tempstring.rfind(" + ");
        tempstring = tempstring[0:lindex] + string.replace(tempstring[lindex:len(tempstring)], " + ", "");
        tempstring = tempstring + ",\n"
        for arch_list in fcount:
            tempstring = tempstring + "#if LV_HAVE_"
            for ind in range(len(arch_list)): 
                tempstring = tempstring + arch_list[ind];
                if ind < len(arch_list) - 1:
                    tempstring = tempstring + " && LV_HAVE_";
            tempstring = tempstring + "\n"
            tempstring = tempstring + " (1 << LV_"
            for ind in range(len(arch_list)):
                tempstring = tempstring + arch_list[ind];
                if ind < len(arch_list) - 1:
                    tempstring = tempstring + ") + (1 << LV_"
            tempstring = tempstring + "),\n#endif\n"
        lindex = tempstring.rfind(",");
        tempstring = tempstring[0:lindex] + string.replace(tempstring[lindex:len(tempstring)], ",", "");
        tempstring = tempstring + "};\n\n"

    
    tempstring = tempstring + emit_epilog();
    tempstring = tempstring +"#endif /*INCLUDED_VOLK_REGISTRY_H*/\n";

    return tempstring;
    
